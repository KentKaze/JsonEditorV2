<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="JE_ABOUT_MESSAGE" xml:space="preserve">
    <value>JSON 資料檔案編輯器 0.1</value>
  </data>
  <data name="JE_ABOUT_MESSAGE_2" xml:space="preserve">
    <value>Created by KentKaze</value>
  </data>
  <data name="JE_ABOUT_TITLE" xml:space="preserve">
    <value>關於</value>
  </data>
  <data name="JE_BTN_CLEAR_COLUMN" xml:space="preserve">
    <value>清空</value>
  </data>
  <data name="JE_BTN_CLEAR_MAIN" xml:space="preserve">
    <value>清空</value>
  </data>
  <data name="JE_BTN_NEW_LINE" xml:space="preserve">
    <value>新增資料</value>
  </data>
  <data name="JE_BTN_UPDATE_COLUMN" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="JE_BTN_UPDATE_MAIN" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="JE_COLUMN_DISPLAY" xml:space="preserve">
    <value>顯示在清單上</value>
  </data>
  <data name="JE_COLUMN_FK_COLUMN" xml:space="preserve">
    <value>外部索引欄位</value>
  </data>
  <data name="JE_COLUMN_FK_TABLE" xml:space="preserve">
    <value>外部索引檔案</value>
  </data>
  <data name="JE_COLUMN_IS_KEY" xml:space="preserve">
    <value>是索引</value>
  </data>
  <data name="JE_COLUMN_NAME" xml:space="preserve">
    <value>欄位名稱</value>
  </data>
  <data name="JE_COLUMN_NUM_OF_ROWS" xml:space="preserve">
    <value>欄位行數</value>
  </data>
  <data name="JE_COLUMN_TYPE" xml:space="preserve">
    <value>欄位型別</value>
  </data>
  <data name="JE_ERR_COLUMN_COUNT_UNMATCH" xml:space="preserve">
    <value>JSON關聯檔案中的欄位數量: {0}和實際檔案中的欄位數量: {1}不合</value>
  </data>
  <data name="JE_ERR_COLUMN_NAME_UNMATCH" xml:space="preserve">
    <value>JSON關聯檔案中的欄位名稱:"{0}"和實際檔案中的欄位名稱"{1}"不合</value>
  </data>
  <data name="JE_ERR_DEFAULT_MESSAGE" xml:space="preserve">
    <value>發生了錯誤，錯誤訊息："{0}"</value>
  </data>
  <data name="JE_ERR_DEFAULT_TITLE" xml:space="preserve">
    <value>錯誤</value>
  </data>
  <data name="JE_ERR_JFI_IS_EMPTY" xml:space="preserve">
    <value>JSON關聯檔案是空的</value>
  </data>
  <data name="JE_ERR_TABLE_NAME_UNMATCH" xml:space="preserve">
    <value>JSON關聯檔案中的檔案名"{0}.json"和實際檔案名稱"{1}.json"不相同</value>
  </data>
  <data name="JE_INPUTBOX_BTN_CANCEL" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="JE_INPUTBOX_BTN_CONFIRM" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="JE_INPUTBOX_DESCRIPTION" xml:space="preserve">
    <value>檔案名稱</value>
  </data>
  <data name="JE_INPUTBOX_DESCRIPTION_2" xml:space="preserve">
    <value>欄位名稱</value>
  </data>
  <data name="JE_INPUTBOX_FILE_EXISTS" xml:space="preserve">
    <value>檔案"{0}:已存在</value>
  </data>
  <data name="JE_INPUTBOX_TITLE" xml:space="preserve">
    <value>開新JSON檔案</value>
  </data>
  <data name="JE_INPUTBOX_TITLE_2" xml:space="preserve">
    <value>新增欄位</value>
  </data>
  <data name="JE_INPUTBOX_WRONG_COLUMN_NAME" xml:space="preserve">
    <value>錯誤的欄位名稱，請用'_'或英文字母開頭，之後使用'_'、英文字母或是數字，長度不要超過50位</value>
  </data>
  <data name="JE_INPUTBOX_WRONG_FILE_NAME" xml:space="preserve">
    <value>不符合規則的檔案名稱</value>
  </data>
  <data name="JE_RUN_ADD_COLUMN_M_1" xml:space="preserve">
    <value>欄位"{0}"已存在</value>
  </data>
  <data name="JE_RUN_DELETE_COLUMN_M_1" xml:space="preserve">
    <value>檔案內存在{0}筆資料，確定要一起刪除欄位嗎</value>
  </data>
  <data name="JE_RUN_DELETE_COLUMN_M_2" xml:space="preserve">
    <value>欄位"{0}"已刪除</value>
  </data>
  <data name="JE_RUN_DELETE_JSON_FILE_M_1" xml:space="preserve">
    <value>確定刪除檔案"{0}.json"？</value>
  </data>
  <data name="JE_RUN_DELETE_JSON_FILE_M_5" xml:space="preserve">
    <value>檔案"{0}.json"已刪除</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_M_1" xml:space="preserve">
    <value>{0}檔案已讀入</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_M_2" xml:space="preserve">
    <value>JFilesInfo連結失敗，忽略後繼續編輯:"{0}"</value>
  </data>
  <data name="JE_RUN_LOAD_JSON_FILES_TITLE" xml:space="preserve">
    <value>讀取檔案庫</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILES_M_1" xml:space="preserve">
    <value>已在"{0}"新建檔案庫</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILES_Q_1" xml:space="preserve">
    <value>此文件已有現存 {0} JSON檔案，是否要清空資料夾</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILES_TITLE" xml:space="preserve">
    <value>開新檔案庫</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILE_M_2" xml:space="preserve">
    <value>檔案新建失敗:"{0}"</value>
  </data>
  <data name="JE_RUN_NEW_JSON_FILE_TITLE" xml:space="preserve">
    <value>開新檔案</value>
  </data>
  <data name="JE_RUN_RENAME_JSON_FILE_M_1" xml:space="preserve">
    <value>檔案"{0}.json"已存在</value>
  </data>
  <data name="JE_RUN_RENAME_JSON_FILE_M_2" xml:space="preserve">
    <value>檔案已重新命名為"{0}"</value>
  </data>
  <data name="JE_RUN_SAVE_AS_JSON_FILES_M_1" xml:space="preserve">
    <value>這不是一個空的資料夾，將清空所有檔案，你確定嗎?</value>
  </data>
  <data name="JE_RUN_SAVE_FILES_CHECK" xml:space="preserve">
    <value>檔案庫"{0}"尚未存檔，是否存檔？</value>
  </data>
  <data name="JE_RUN_SAVE_JSON_FILES_M_1" xml:space="preserve">
    <value>"{0}"所有檔案已存檔</value>
  </data>
  <data name="JE_RUN_SCAN_JSON_FILES_M_1" xml:space="preserve">
    <value>準備掃描全部JSON檔案，根據資料重新建立JSON檔案關聯檔，會覆蓋原有的檔案關聯檔，如果JSON檔案數量眾多將會消耗很多時間，是否確定？</value>
  </data>
  <data name="JE_RUN_SCAN_JSON_FILES_M_2" xml:space="preserve">
    <value>{0}檔案掃描完畢</value>
  </data>
  <data name="JE_RUN_SCAN_JSON_FILES_TITLE" xml:space="preserve">
    <value>掃描檔案庫</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_1" xml:space="preserve">
    <value>欄位名稱不正確</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_2" xml:space="preserve">
    <value>欄位行數不正確</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_3" xml:space="preserve">
    <value>請選擇外部索引欄位</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_4" xml:space="preserve">
    <value>檔案內存在{0}筆資料，確定要一起更改嗎(型態不合的資料將設為初始值)</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_M_5" xml:space="preserve">
    <value>欄位"{0}"已更新</value>
  </data>
  <data name="JE_RUN_UPDATE_COLUMN_TITLE" xml:space="preserve">
    <value>更新欄位</value>
  </data>
  <data name="JE_TMI_ABOUT" xml:space="preserve">
    <value>關於</value>
  </data>
  <data name="JE_TMI_ADD_COLUMN" xml:space="preserve">
    <value>增加欄位</value>
  </data>
  <data name="JE_TMI_CLOSE_ALL_FILES" xml:space="preserve">
    <value>關閉檔案庫</value>
  </data>
  <data name="JE_TMI_CLOSE_JSON_FILE" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="JE_TMI_COLLAPSE_ALL" xml:space="preserve">
    <value>收縮全部</value>
  </data>
  <data name="JE_TMI_DELETE_COLUMN" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="JE_TMI_DELETE_JSON_FILE" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="JE_TMI_EXIT" xml:space="preserve">
    <value>離開</value>
  </data>
  <data name="JE_TMI_EXPAND_ALL" xml:space="preserve">
    <value>展開全部</value>
  </data>
  <data name="JE_TMI_FILE" xml:space="preserve">
    <value>檔案</value>
  </data>
  <data name="JE_TMI_LANGUAGES" xml:space="preserve">
    <value>語言</value>
  </data>
  <data name="JE_TMI_LOAD_JSON_FILES" xml:space="preserve">
    <value>讀取JSON檔案庫</value>
  </data>
  <data name="JE_TMI_NEW_JSON_FILE" xml:space="preserve">
    <value>新增JSON檔案</value>
  </data>
  <data name="JE_TMI_NEW_JSON_FILES" xml:space="preserve">
    <value>新建JSON檔案庫</value>
  </data>
  <data name="JE_TMI_OPEN_JSON_FILE" xml:space="preserve">
    <value>開啟</value>
  </data>
  <data name="JE_TMI_RENAME_JSON_FILE" xml:space="preserve">
    <value>重新命名</value>
  </data>
  <data name="JE_TMI_SAVE_AS_JSON_FILES" xml:space="preserve">
    <value>另存JSON檔案庫</value>
  </data>
  <data name="JE_TMI_SAVE_JSON_FILES" xml:space="preserve">
    <value>存取JSON檔案庫</value>
  </data>
  <data name="JE_TMI_SCAN_JSON_FILES" xml:space="preserve">
    <value>掃描JSON檔案庫</value>
  </data>
  <data name="JSON_FILE_EDITOR_TITLE" xml:space="preserve">
    <value>JSON 資料檔案編輯器</value>
  </data>
</root>